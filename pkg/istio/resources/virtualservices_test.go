package resources

// import (
// 	"encoding/json"
// 	"testing"
// )

// func TestMakeIstioVirtualServices(t *testing.T) {
// 	transformedServices := []TransformedService{TransformedService{Host: "productpage", ServiceSubsetList: []ServiceSubset{ServiceSubset{Labels: map[string]string{"version": "v1", "stam": "v1"}, SubsetHash: "599866b499", VirtualEnvironments: []string{"bookinfo", "bookinfo-ratings"}}}}, TransformedService{Host: "reviews", ServiceSubsetList: []ServiceSubset{ServiceSubset{Labels: map[string]string{"version": "v1"}, SubsetHash: "8444f85f99", VirtualEnvironments: []string{"bookinfo"}}, ServiceSubset{Labels: map[string]string{"version": "v2"}, SubsetHash: "84457d7684", VirtualEnvironments: []string{"bookinfo-ratings"}}}}, TransformedService{Host: "details", ServiceSubsetList: []ServiceSubset{ServiceSubset{Labels: map[string]string{"version": "v1"}, SubsetHash: "8444f85f99", VirtualEnvironments: []string{"bookinfo", "bookinfo-ratings"}}}}, TransformedService{Host: "ratings", ServiceSubsetList: []ServiceSubset{ServiceSubset{Labels: map[string]string{"version": "v1"}, SubsetHash: "8444f85f99", VirtualEnvironments: []string{"bookinfo-ratings"}}}}}

// 	istioVirtualServices := MakeIstioVirtualServices(transformedServices, "default", "bookinfo-gateway")
// 	json, _ := json.MarshalIndent(istioVirtualServices, "", "  ")
// 	t.Logf("%s", string(json))
// 	//t.Logf("%#v\n", istioVirtualServices)

// 	//expcted := []knativeistio.VirtualService{knativeistio.VirtualService{TypeMeta: metav1.TypeMeta{Kind: "VirtualService", APIVersion: "networking.istio.io/knativeistio"}, ObjectMeta: metav1.ObjectMeta{Name: "productpage", GenerateName: "", Namespace: "default", SelfLink: "", UID: "", ResourceVersion: "", Generation: 0, CreationTimestamp: metav1.Time{Time: time.Time{wall: 0x0, ext: 0, loc: (*time.Location)(nil)}}, DeletionTimestamp: (*metav1.Time)(nil), DeletionGracePeriodSeconds: (*int64)(nil), Labels: map[string]string{}, Annotations: map[string]string(nil), OwnerReferences: []metav1.OwnerReference(nil), Initializers: (*metav1.Initializers)(nil), Finalizers: []string(nil), ClusterName: ""}, Spec: knativeistio.VirtualServiceSpec{Hosts: []string{"productpage"}, Gateways: []string{"bookinfo-gateway", "mesh"}, Http: []knativeistio.HTTPRoute{knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "productpage", Subset: "productpage-599866b499", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}, knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo-ratings", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "productpage", Subset: "productpage-599866b499", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}}, Tcp: []knativeistio.TCPRoute(nil)}}, knativeistio.VirtualService{TypeMeta: metav1.TypeMeta{Kind: "VirtualService", APIVersion: "networking.istio.io/knativeistio"}, ObjectMeta: metav1.ObjectMeta{Name: "reviews", GenerateName: "", Namespace: "default", SelfLink: "", UID: "", ResourceVersion: "", Generation: 0, CreationTimestamp: metav1.Time{Time: time.Time{wall: 0x0, ext: 0, loc: (*time.Location)(nil)}}, DeletionTimestamp: (*metav1.Time)(nil), DeletionGracePeriodSeconds: (*int64)(nil), Labels: map[string]string{}, Annotations: map[string]string(nil), OwnerReferences: []metav1.OwnerReference(nil), Initializers: (*metav1.Initializers)(nil), Finalizers: []string(nil), ClusterName: ""}, Spec: knativeistio.VirtualServiceSpec{Hosts: []string{"reviews"}, Gateways: []string{"bookinfo-gateway", "mesh"}, Http: []knativeistio.HTTPRoute{knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "reviews", Subset: "reviews-8444f85f99", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}, knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo-ratings", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "reviews", Subset: "reviews-84457d7684", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}}, Tcp: []knativeistio.TCPRoute(nil)}}, knativeistio.VirtualService{TypeMeta: metav1.TypeMeta{Kind: "VirtualService", APIVersion: "networking.istio.io/knativeistio"}, ObjectMeta: metav1.ObjectMeta{Name: "details", GenerateName: "", Namespace: "default", SelfLink: "", UID: "", ResourceVersion: "", Generation: 0, CreationTimestamp: metav1.Time{Time: time.Time{wall: 0x0, ext: 0, loc: (*time.Location)(nil)}}, DeletionTimestamp: (*metav1.Time)(nil), DeletionGracePeriodSeconds: (*int64)(nil), Labels: map[string]string{}, Annotations: map[string]string(nil), OwnerReferences: []metav1.OwnerReference(nil), Initializers: (*metav1.Initializers)(nil), Finalizers: []string(nil), ClusterName: ""}, Spec: knativeistio.VirtualServiceSpec{Hosts: []string{"details"}, Gateways: []string{"bookinfo-gateway", "mesh"}, Http: []knativeistio.HTTPRoute{knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "details", Subset: "details-8444f85f99", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}, knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo-ratings", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "details", Subset: "details-8444f85f99", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}}, Tcp: []knativeistio.TCPRoute(nil)}}, knativeistio.VirtualService{TypeMeta: metav1.TypeMeta{Kind: "VirtualService", APIVersion: "networking.istio.io/knativeistio"}, ObjectMeta: metav1.ObjectMeta{Name: "ratings", GenerateName: "", Namespace: "default", SelfLink: "", UID: "", ResourceVersion: "", Generation: 0, CreationTimestamp: metav1.Time{Time: time.Time{wall: 0x0, ext: 0, loc: (*time.Location)(nil)}}, DeletionTimestamp: (*metav1.Time)(nil), DeletionGracePeriodSeconds: (*int64)(nil), Labels: map[string]string{}, Annotations: map[string]string(nil), OwnerReferences: []metav1.OwnerReference(nil), Initializers: (*metav1.Initializers)(nil), Finalizers: []string(nil), ClusterName: ""}, Spec: knativeistio.VirtualServiceSpec{Hosts: []string{"ratings"}, Gateways: []string{"bookinfo-gateway", "mesh"}, Http: []knativeistio.HTTPRoute{knativeistio.HTTPRoute{Match: []knativeistio.HTTPMatchRequest{knativeistio.HTTPMatchRequest{Uri: (*knativeistio.StringMatch)(nil), Scheme: (*knativeistio.StringMatch)(nil), Method: (*knativeistio.StringMatch)(nil), Authority: (*knativeistio.StringMatch)(nil), Headers: map[string]knativeistio.StringMatch{"ol-route": knativeistio.StringMatch{Exact: "bookinfo-ratings", Prefix: "", Regex: ""}}}}, Route: []knativeistio.DestinationWeight{knativeistio.DestinationWeight{Destination: knativeistio.Destination{Host: "ratings", Subset: "ratings-8444f85f99", Port: knativeistio.PortSelector{Number: 0x0, Name: ""}}, Weight: 0}}, Redirect: (*knativeistio.HTTPRedirect)(nil), Rewrite: (*knativeistio.HTTPRewrite)(nil), WebsocketUpgrade: false, Timeout: "", Retries: (*knativeistio.HTTPRetry)(nil), Fault: (*knativeistio.HTTPFaultInjection)(nil), Mirror: (*knativeistio.Destination)(nil), AppendHeaders: map[string]string(nil), RemoveResponseHeaders: map[string]string(nil)}}, Tcp: []knativeistio.TCPRoute(nil)}}}
// 	//if !reflect.DeepEqual(*istioVirtualServices, expcted) {
// 	//	t.Fail()
// 	//}
// }
